[{"/Volumes/LaCie/blockchain apps/rocket_realty/src/index.js":"1","/Volumes/LaCie/blockchain apps/rocket_realty/src/App.js":"2","/Volumes/LaCie/blockchain apps/rocket_realty/src/reportWebVitals.js":"3","/Volumes/LaCie/blockchain apps/rocket_realty/src/components/Navigation.js":"4","/Volumes/LaCie/blockchain apps/rocket_realty/src/components/Home.js":"5","/Volumes/LaCie/blockchain apps/rocket_realty/src/components/Search.js":"6","/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/index.js":"7","/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/App.js":"8","/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/reportWebVitals.js":"9","/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/Navigation.js":"10","/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/Search.js":"11","/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/data.js":"12","/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/HomeCard.js":"13"},{"size":535,"mtime":1673635195690,"results":"14","hashOfConfig":"15"},{"size":4277,"mtime":1690748290750,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1673635195690,"results":"17","hashOfConfig":"15"},{"size":1712,"mtime":1689196680200,"results":"18","hashOfConfig":"15"},{"size":6636,"mtime":1689199093590,"results":"19","hashOfConfig":"15"},{"size":366,"mtime":1677263304750,"results":"20","hashOfConfig":"15"},{"size":535,"mtime":1673635195690,"results":"21","hashOfConfig":"22"},{"size":1573,"mtime":1690951908090,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1673635195690,"results":"24","hashOfConfig":"22"},{"size":1712,"mtime":1689196680200,"results":"25","hashOfConfig":"22"},{"size":366,"mtime":1677263304750,"results":"26","hashOfConfig":"22"},{"size":2853,"mtime":1690951908140,"results":"27","hashOfConfig":"22"},{"size":1500,"mtime":1690951908110,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3xxqa7",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"5t8jtl",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/LaCie/blockchain apps/rocket_realty/src/index.js",[],[],"/Volumes/LaCie/blockchain apps/rocket_realty/src/App.js",[],[],"/Volumes/LaCie/blockchain apps/rocket_realty/src/reportWebVitals.js",[],[],"/Volumes/LaCie/blockchain apps/rocket_realty/src/components/Navigation.js",["71","72","73"],[],"import logo from '../assets/logo.svg';\n\nconst Navigation = ({ account, setAccount }) => {\n// button that connect to real account\n// sets to component state of the parent component (app.js)\n// passes back in with <Navigation account={account} setAccount={setAccount} /> in App.js\n    const connectHandler = async () => {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        setAccount(accounts[0]) // write to the state.\n    }\n\n// {account ? ()}\n// -> if account exist show on page (truncate it).\n// -> if it doesn't exist allow you to connect to metamask (connect button).\n\n// loads the account with (const Navigation = ) above.\n// saves to component state in (App.js).\n// passes in (<Navigation account={account} setAccount={setAccount} /> in App.js).\n\n    return (\n        <nav>\n            <ul className='nav__links'>\n                <li><a href=\"#\">Buy</a></li>\n                <li><a href=\"#\">Rent</a></li>\n                <li><a href=\"#\">Sell</a></li>\n            </ul>\n\n            <div className='nav__brand'>\n                <img src={logo} alt=\"Logo\" />\n                <h1>Rocket</h1>\n            </div>\n\n            {account ? (\n                <button\n                    type=\"button\"\n                    className='nav__connect'\n                >\n                    {account.slice(0, 6) + '...' + account.slice(38, 42)}\n                </button>\n            ) : (\n                <button\n                    type=\"button\"\n                    className='nav__connect'\n                    onClick={connectHandler}\n                >\n                    Connect\n                </button>\n            )}\n        </nav>\n    );\n\n}\n\nexport default Navigation;\n","/Volumes/LaCie/blockchain apps/rocket_realty/src/components/Home.js",["74","75","76"],[],"import { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\n\nimport close from '../assets/close.svg';\n\nconst Home = ({ home, provider, account, escrow, togglePop }) => {\n\n// save to component state\n    const [hasBought, setHasBought] = useState(false)\n    const [hasLended, setHasLended] = useState(false)\n    const [hasInspected, setHasInspected] = useState(false)\n    const [hasSold, setHasSold] = useState(false)\n\n    const [buyer, setBuyer] = useState(null)\n    const [lender, setLender] = useState(null)\n    const [inspector, setInspector] = useState(null)\n    const [seller, setSeller] = useState(null)\n\n    const [owner, setOwner] = useState(null)\n\n// fetch different accounts from smart contract (seller, buyer, lender, etc.) to determine user functions.\n    const fetchDetails = async () => {\n        // -- Buyer\n        const buyer = await escrow.buyer(home.id)\n        setBuyer(buyer)\n        const hasBought = await escrow.approval(home.id, buyer) // keeps track of actions\n        setHasBought(hasBought)\n\n        // -- Seller\n        const seller = await escrow.seller()\n        setSeller(seller)\n        const hasSold = await escrow.approval(home.id, seller) // keeps track of actions\n        setHasSold(hasSold)\n\n        // -- Lender\n        const lender = await escrow.lender()\n        setLender(lender)\n        const hasLended = await escrow.approval(home.id, lender) // keeps track of actions\n        setHasLended(hasLended)\n\n        // -- Inspector\n        const inspector = await escrow.inspector()\n        setInspector(inspector)\n        const hasInspected = await escrow.approval(home.id, inspector) // keeps track of actions\n        setHasInspected(hasInspected)\n    }\n\n    const fetchOwner = async () => {\n        // make sure that the home is listed\n        if (await escrow.isListed(home.id)) return\n\n        const owner = await escrow.buyer(home.id)\n        setOwner(owner)\n    }\n\n    const buyHandler = async () => {\n        const escrowAmount = await escrow.escrowAmount(home.id)\n        const signer = await provider.getSinger()\n\n        // buyer deposits earnest\n        let transaction = await escrow.connect(signer).depositEarnest(home.id, {value: escrowAmount})\n        await transaction.wait()\n\n        // buyer approves\n        transaction = await escrow.connect(signer).approveSale(home.id)\n        await transaction.wait()\n\n        setHasBought(true)\n    }\n\n    const inspectHandler = async () => {\n        const signer = await provider.getSinger()\n\n        //inspector status update\n        const transaction = await escrow.connect(signer).updateInspectionStatus(home.id, true)\n        await transaction.wait()\n\n        hasInspected(true)\n    }\n    const lendHandler = async () => {\n        const signer = await provider.getSinger()\n\n        // lender approves\n        const transaction = await escrow.connect(signer).approveSale(home.id)\n        await transaction.wait()\n\n        // lender sends funds to contract\n        const lendAmount = (await escrow.purchasePrice(home.id) - await escrow.escrowAmount(home.id))\n        await signer.sendTransaction({to: escrow.address, value: lendAmount.toString(), gasLimit: 60000})\n\n        setHasLended(true)\n    }\n    const sellHandler = async () => {\n        const signer = await provider.getSinger()\n\n        // seller approves\n        let transaction = await escrow.connect(signer).approveSale(home.id)\n        await transaction.wait()\n\n        // seller finalize\n        transaction = await escrow.connect(signer).finalizeSale(home.id)\n        await transaction.wait()\n\n        setHasSold(true)\n    }\n\n// call both functions\n// if [hasSold] has changed, re-call fetchDetains and fetchOwner \n    useEffect(() => {\n        fetchDetails()\n        fetchOwner()\n    }, [hasSold])\n\n    return (\n        <div className='home'>\n            <div className='home__details'>\n\n                <div className='home__image'>\n                    <img src={home.image} alt=\"Home\" />\n                </div>\n\n                <div className='home__overview'>\n                    <h1>{home.name}</h1>\n                    <p>\n                        <strong>{home.attributes[2].value}</strong> bds |\n                        <strong>{home.attributes[3].value}</strong> ba |\n                        <strong>{home.attributes[4].value}</strong> sqft\n                    </p>\n                    <p>{home.address}</p>\n                    <h2>{home.attributes[0].value} ETH</h2>\n\n                    {owner ? (\n                        <div className='home__owned'>\n                            Owned by {owner.slice(0, 6) + '...' + owner.slice(38, 42)}\n                        </div>\n                    ) : (\n                        <div>\n                            {(account === inspector) ? (\n                                <button className='home__buy' onClick={inspectHandler} disabled={hasInspected}>\n                                    Approve Inspection\n                                </button>\n                            ) : (account === lender) ? (\n                                <button className='home__buy' onClick={lendHandler} disabled={hasLended}>\n                                    Approve & Lend\n                                </button>\n                            ) : (account === seller) ? (\n                                <button className='home__buy' onClick={sellHandler} disabled={hasSold}>\n                                    Approve & Sell\n                                </button>\n                            ) : (\n                                <button className='home__buy' onClick={buyHandler} disabled={hasBought}>\n                                    Buy\n                                </button>\n                            )}\n\n                        <button className='home__contact'>\n                            Contact Agent\n                        </button>\n                        </div>\n                    )}\n\n                    <hr />\n\n                    <h2>Overview</h2>\n                    <p>\n                        {home.description}\n                    </p>\n\n                    <h2>Facts & Features</h2>\n                    <ul>\n                        {home.attributes.map((attribute, index) => (\n                            <li key='index'><strong>{attribute.trait_type}</strong>: {attribute.value}</li>\n                        ))}\n                    </ul>\n\n                </div>\n\n\n                <button onClick={togglePop} className='home__close'>\n                    <img src={close} alt=\"Close\" />\n                </button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Home;\n","/Volumes/LaCie/blockchain apps/rocket_realty/src/components/Search.js",[],[],"/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/index.js",[],[],[],"/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/App.js",[],[],"/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/reportWebVitals.js",[],[],"/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/Navigation.js",["77","78","79"],[],"/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/Search.js",[],[],"/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/data.js",[],[],"/Volumes/LaCie/blockchain apps/for portfolip link/rocket_realty/src/components/HomeCard.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":23,"column":21,"nodeType":"82","endLine":23,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":24,"column":21,"nodeType":"82","endLine":24,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":25,"column":21,"nodeType":"82","endLine":25,"endColumn":33},{"ruleId":"83","severity":1,"message":"84","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":16},{"ruleId":"83","severity":1,"message":"87","line":14,"column":12,"nodeType":"85","messageId":"86","endLine":14,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":112,"column":8,"nodeType":"90","endLine":112,"endColumn":17,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"81","line":23,"column":21,"nodeType":"82","endLine":23,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":24,"column":21,"nodeType":"82","endLine":24,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":25,"column":21,"nodeType":"82","endLine":25,"endColumn":33},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'ethers' is defined but never used.","Identifier","unusedVar","'buyer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchDetails' and 'fetchOwner'. Either include them or remove the dependency array.","ArrayExpression",["92"],{"desc":"93","fix":"94"},"Update the dependencies array to be: [fetchDetails, fetchOwner, hasSold]",{"range":"95","text":"96"},[3769,3778],"[fetchDetails, fetchOwner, hasSold]"]